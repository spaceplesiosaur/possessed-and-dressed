{"version":3,"sources":["components/Header/Header.js","actions/index.js","containers/MiniHost/MiniHost.js","containers/EntryForm/EntryForm.js","containers/ColorChooser/ColorChooser.js","util/apiCalls.js","containers/ColorBar/ColorBar.js","components/HostPage/HostPage.js","containers/ColorFeedback/ColorFeedback.js","components/404Page/404Page.js","containers/App/App.js","reducers/index.js","reducers/hosts.js","reducers/chosenHost.js","reducers/categories.js","reducers/seasons.js","reducers/allColors.js","reducers/chosenColor.js","serviceWorker.js","index.js"],"names":["Header","handleClick","props","clearAHost","state","to","onClick","this","style","textDecoration","className","Component","connect","chosenHost","dispatch","type","MiniHost","picture","name","happy_pic","change","click","switchPic","ishappy","scareHost","setState","unScareHost","clickChooseHost","event","a","async","src","alt","onMouseEnter","onMouseLeave","data-host","EntryForm","generateHostPics","hostList","map","host","key","id","happy_picture","handleImageClick","handleChange","target","value","dataset","findHost","foundHost","find","hostName","handleError","error","inputClass","input","text","chooseAHost","hostPossessed","htmlFor","onChange","hosts","hostInfo","chooseHost","ColorChooser","colorName","hues","borderColor","toggleListDisplay","open","handleMenuClick","listDisplay","handleColorClick","colorChoice","hue","chooseColor","hydrateColorList","backgroundColor","hex_code","chosenColor","border","chosenColorInfo","getInfo","url","fetch","method","headers","then","response","ok","Error","json","ColorBar","colorCategories","hexCodes","supplyColorCategories","data","storeCategories","supplyHexCodes","storeAllColors","findMenuParentColor","parentHexesList","nameFromList","color","Object","keys","matchAvailableHuesToList","colorIdList","colorId","hex","displayColorBar","colorTitles","red","orange","yellow","green","blue","violet","pink","neutral","category","colorBorder","decipherHues","colors","every","undefined","categories","allColors","seasons","categoriesInfo","setCategories","colorsInfo","HostPage","clearAColor","match","season","console","log","toUpperCase","ErrorPage","App","supplyHosts","storeHosts","supplySeasons","storeSeasons","determineHostSeason","seasonList","determineMatch","includes","exact","path","render","selectedHost","parseInt","params","hexList","hostData","seasonData","rootReducer","combineReducers","action","Boolean","window","location","hostname","store","createStore","composeWithDevTools","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4169a310.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Header.scss';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { clearHost } from '../../actions/index.js';\n\nexport class Header extends Component {\n  constructor() {\n    super()\n    this.state = {\n\n    }\n  }\n\n  handleClick = () => {\n    this.props.clearAHost()\n  }\n\n  render() {\n    return (\n      <Link to=\"/\" onClick={this.handleClick} style={{textDecoration: \"none\"}}><header className=\"app-header\">Posessed & Dressed</header></Link>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  chosenHost: state.chosenHost,\n})\nexport const mapDispatchToProps = (dispatch) => ({\n  clearAHost: () => dispatch(clearHost()),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","export const setHosts = (hosts) => ({\n  type: 'SET_HOSTS',\n  hosts: hosts\n});\n\nexport const chooseHost = (hostInfo) => ({\n  type: 'CHOOSE_HOST',\n  chosenHost: hostInfo\n})\n\nexport const clearHost = () => ({\n  type: 'CLEAR_HOST',\n  chosenHost: {}\n})\n\nexport const clearColor = () => ({\n  type: 'CLEAR_COLOR',\n  chosenHost: {}\n})\n\nexport const setCategories = (categoriesInfo) => ({\n  type: 'SET_CATEGORIES',\n  categories: categoriesInfo\n})\n\nexport const setAllColors = (colors) => ({\n  type: 'SET_ALL_COLORS',\n  colors: colors\n})\n\nexport const setSeasons = (seasons) => ({\n  type: 'SET_SEASONS',\n  seasons: seasons\n})\n\nexport const chooseColor = (color) => ({\n  type: 'CHOOSE_COLOR',\n  chosenColor: color\n})\n","import React, { Component } from 'react';\nimport './MiniHost.scss';\n\nexport class MiniHost extends Component {\n  constructor({picture, name, happy_pic, change, click}) {\n    super()\n    this.state = {\n      ishappy: true\n    }\n  }\n\n  switchPic = () => {\n    if (this.state.ishappy === true) {\n      return this.props.happy_pic\n    }\n\n    if (this.state.ishappy === false) {\n      return this.props.picture\n    }\n  }\n\n  scareHost = () => {\n    this.setState({ishappy: false})\n  }\n\n  unScareHost = () => {\n    this.setState({ishappy: true})\n  }\n\n  clickChooseHost = async (event) => {\n    await this.props.change(event)\n    await this.props.click()\n  }\n\n  render() {\n    return (\n      <div className=\"entryPage-miniHost-hostAvatar\">\n        <img src={this.switchPic()} className=\"host-avatar-picture\" alt=\"host-screaming\" onMouseEnter={this.scareHost} onMouseLeave={this.unScareHost} name=\"hostName\" data-host={this.props.name} onClick={this.clickChooseHost}></img>\n        <p className=\"host-avatar-name\">{this.props.name}</p>\n      </div>\n    )\n  }\n}\n\nexport default MiniHost;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './EntryForm.scss';\nimport MiniHost from '../MiniHost/MiniHost';\nimport { connect } from 'react-redux';\nimport { chooseHost } from '../../actions/index.js';\nimport PropTypes from 'prop-types';\n\nexport class EntryForm extends Component {\n  constructor() {\n    super()\n    this.state = {\n      hostName: \"\",\n      error: false,\n      inputClass: {input: \"entryForm-hostName-input\", text: \"hidden\"},\n      hostPossessed: false,\n    }\n  }\n\n  generateHostPics = () => {\n    return this.props.hostList.map(host => {\n      return (\n        <MiniHost\n          key={host.id}\n          picture={host.picture}\n          happy_pic={host.happy_picture}\n          name={host.name}\n          change={this.handleImageClick}\n          click={this.handleClick}\n          id={host.id}\n        />\n      )\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleImageClick = (event) => {\n    this.setState({[event.target.name]: event.target.dataset.host})\n  }\n\n  findHost = () => {\n    const foundHost = this.props.hostList.find(host => {\n      return host.name === this.state.hostName\n    })\n\n    return (foundHost ? foundHost: 'error')\n  }\n\n  handleError = () => {\n    this.state.error &&\n    this.setState({inputClass: {input: \"entryForm-hostName-inputError\", text: \".entryForm-error-text\"}})\n  }\n\n  handleClick = async () => {\n    if (this.findHost() === 'error' || this.state.hostName === \"\") {\n      await this.setState({error: true})\n      this.handleError()\n    } else {\n      // this.supplyColorCategories()\n      // this.supplyHexCodes()\n      this.props.chooseAHost(this.findHost())\n      this.setState({hostPossessed: true})\n    }\n  }\n\n  render() {\n\n    return (\n      this.props.host.name ?\n      <Redirect to={`/hosts/${this.props.host.id}`} /> :\n      <section className=\"app-entryForm\">\n        <h2>Welcome!  Choose the person you would like to possess today.</h2>\n        <div className=\"entryForm-hostName-inputSet\">\n          <div className=\"entryForm-hostName-styling\">\n            <label htmlFor=\"hostName\" className=\"entryForm-hostName-label\">Chosen Host:</label>\n            <input name=\"hostName\" id=\"hostName-input\" className={this.state.inputClass.input} onChange={this.handleChange}></input>\n            <button className=\"choose-host-button\" onClick={this.handleClick} id=\"hostName-button\">Dress & Possess!</button>\n          </div>\n          <p className={this.state.inputClass.text}>Only enter a name from the list!</p>\n        </div>\n        <section className=\"app-entryForm-hostList\">\n          {this.generateHostPics()}\n        </section>\n      </section>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  hostList: state.hosts,\n  host: state.chosenHost\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  chooseAHost: hostInfo => dispatch(chooseHost(hostInfo)),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(EntryForm)\n\nEntryForm.propTypes = {\n  hostList: PropTypes.array,\n  host: PropTypes.object,\n  chooseColor: PropTypes.func\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport './ColorChooser.scss'\nimport { connect } from 'react-redux'\nimport { chooseColor } from '../../actions/index.js';\nimport PropTypes from 'prop-types'\n\nexport class ColorChooser extends Component {\n  constructor({colorName, hues, borderColor}) {\n    super()\n    this.state = {\n      open: false,\n      listDisplay: 'hidden',\n    }\n  }\n\n  toggleListDisplay = () => {\n    this.setState({open: !this.state.open})\n  }\n\n  handleMenuClick = async () => {\n    await this.toggleListDisplay()\n    !this.state.open ?\n    this.setState({listDisplay: 'hidden'}) :\n    this.setState({listDisplay: 'colorList-hues'})\n\n  }\n\n  handleColorClick = (event) => {\n    const colorChoice = this.props.hues.find(hue => {\n      return hue.name === event.target.id\n    })\n    this.props.chooseColor(colorChoice)\n  }\n\n  hydrateColorList = () => {\n    return this.props.hues.map(hue => {\n      return <li className=\"colorList-box\" style={{backgroundColor: `${hue.hex_code}`}} id={hue.name} onClick={this.handleColorClick} key={hue.id}></li>\n    })\n  }\n  render() {\n    return (\n      this.props.chosenColor !== \"\" ?\n      <Redirect to={`/hosts/${this.props.chosenHost.id}/${this.props.chosenColor.name}`} /> :\n      <div className=\"colorChooser-colorDropdown-widget\">\n        <h4 className=\"colorList-box\" style={{border: `10px solid ${this.props.borderColor}`}} onClick={this.handleMenuClick} id=\"menu-header\">{this.props.colorName}</h4>\n        <ul className={this.state.listDisplay}>\n          {this.hydrateColorList()}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  chosenHost: state.chosenHost,\n  chosenColor: state.chosenColor\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  chooseColor: chosenColorInfo => dispatch(chooseColor(chosenColorInfo))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorChooser)\n\nColorChooser.propTypes = {\n  chosenHost: PropTypes.func,\n  chosenColor: PropTypes.func,\n  chooseColor: PropTypes.string\n}\n","export const getInfo = (url, type) => {\n  const options = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Token 3fc50009100f8a4794408699493b41c3b84467f5',\n    }\n  }\n  return fetch(url, options)\n    .then(response => {\n      if(!response.ok) {\n        throw Error (`Oh no! There is a problem finding ${type}`)\n      }\n      return response.json()\n    })\n}\n","import React, { Component } from 'react';\nimport './ColorBar.scss';\nimport ColorChooser from '../ColorChooser/ColorChooser';\nimport PropTypes from 'prop-types';\nimport { getInfo } from '../../util/apiCalls';\nimport { connect } from 'react-redux';\nimport { setCategories } from '../../actions/index.js';\nimport { setAllColors } from '../../actions/index.js';\n\n\nexport class ColorBar extends Component {\n  constructor({colorCategories, hexCodes}) {\n    super()\n    this.state = {\n\n    }\n  }\n\n  componentDidMount () {\n    this.supplyColorCategories();\n    this.supplyHexCodes();\n    // this.supplySeasons()\n  }\n\n  supplyColorCategories = () => {\n    getInfo('https://color-seasons.herokuapp.com/categories/', 'color categories')\n    .then(data => this.props.storeCategories(data))\n    // .then(data => console.log(data))\n  }\n\n  supplyHexCodes = () => {\n    getInfo('https://color-seasons.herokuapp.com/colors/', 'colors and hex codes')\n    .then(data => this.props.storeAllColors(data))\n    // .then(data => console.log(data))\n  }\n\n  findMenuParentColor = (parentHexesList, nameFromList) => {\n    return parentHexesList.find(color => {\n      return Object.keys(color)[0] === nameFromList\n    })[nameFromList]\n\n  }\n\n  matchAvailableHuesToList = (colorIdList) => {\n    return colorIdList.map(colorId => {\n      return this.props.hexCodes.find(hex => {\n        return hex.id === colorId\n      })\n    })\n  }\n\n  displayColorBar = () => {\n    const colorTitles = [{red: '#F87E97'}, {orange: '#F89C51'}, {yellow: '#E7C142'}, {green: '#A7C65F'}, {blue: '#5DA1DA'}, {violet: '#5C50B6'}, {pink: '#DE92DA'}, {neutral: '#E2E2E3'}]\n\n    const colorWidgetMaker = this.props.colorCategories.map(category => {\n      const colorBorder = this.findMenuParentColor(colorTitles, category.name)\n      const decipherHues = this.matchAvailableHuesToList(category.colors)\n\n      return (\n        decipherHues.every(color => color !== undefined) &&\n        (<ColorChooser\n          key={category.id}\n          colorName={category.name}\n          hues={decipherHues}\n          borderColor={colorBorder}\n        />)\n      )\n    })\n    return colorWidgetMaker\n  }\n\n  render() {\n    return (\n      <section className=\"colorBar-main-frame\">\n      <h2 className=\"colorBar-main-header\">What color would you like your host to wear?</h2>\n      <p className=\"colorBar-main-explantion\">Remember, it is VERY IMPORTANT to dress your host in something they look their best in - if they don't look their best, The Church will become suspicious and may perform an exorcism! This will hurt you.</p>\n      <section className=\"colorBar-frame-navBar\">\n        {this.displayColorBar()}\n      </section>\n    </section>)\n\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  colorCategories: state.categories,\n  hexCodes: state.allColors,\n  seasons: state.seasons\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  storeCategories: categoriesInfo => dispatch(setCategories(categoriesInfo)),\n  storeAllColors: colorsInfo => dispatch(setAllColors(colorsInfo)),\n  // storeSeasons: (seasonsInfo) => dispatch(setSeasons(seasonsInfo))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorBar)\n\nColorBar.propTypes = {\n  colorCategories: PropTypes.array,\n  hexCodes: PropTypes.array,\n  seasons: PropTypes.array,\n  storeCategories: PropTypes.func,\n  storeAllColors: PropTypes.func\n}\n","import React from 'react'\nimport './HostPage.scss'\n\nexport const HostPage = ({host}) => {\n  return (\n    <section className=\"hostPage-main-frame\">\n      <p className=\"host-name-tag\">Meet {host.name}! {host.name} is very excited to be possessed by you.</p>\n      <img className=\"hostPage-picture-host\" src={host.picture} alt=\"hostPage-main-hostPic\"></img>\n    </section>\n  )\n}\n\nexport default HostPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ColorFeedback.scss';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { clearColor } from '../../actions/index.js';\n\n\nexport const ColorFeedback = ({match, chosenColor, chosenHost, season, clearAColor}) => {\n\n  const determineFeedback = () => {\n    return (!match)\n      ? (<p className=\"colorFeedback-main-feedback\">Terrible choice! Your host's season is {`${season.toUpperCase()}`}. {`${chosenColor.name.toUpperCase()}`} will make them look tired, sad and afraid. Change clothes before someone alerts The Church!</p>)\n      : (<p className=\"colorFeedback-main-feedback\">Great choice! Your host's season is {`${season.toUpperCase()}`}. {`${chosenColor.name.toUpperCase()}`} will look great on them - The Church won't suspect a thing!  Happy haunting!</p>)\n  }\n\n  const handleClick = () => {\n    clearAColor()\n  }\n\n  return (\n    console.log('HOST', chosenHost),\n    chosenColor.name && <section className=\"colorFeedback-main\">\n      <div className=\"colorFeedback-main-colorBox\" style={{backgroundColor: `${chosenColor.hex_code}`}}>\n      </div>\n      <h2 className=\"colorFeedback-main-name\">{chosenColor.name.toUpperCase()}</h2>\n      {determineFeedback()}\n      <Link to={`/hosts/${chosenHost.id}`} onClick={handleClick}><button className=\"back-button\">Back</button></Link>\n    </section>\n  )\n}\nexport const mapStateToProps = (state) => ({\n  chosenColor: state.chosenColor,\n  chosenHost: state.chosenHost\n})\nexport const mapDispatchToProps = (dispatch) => ({\n  clearAColor: () => dispatch(clearColor()),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorFeedback)\n\nColorFeedback.propTypes = {\n  chosenColor: PropTypes.func,\n  chooseColor: PropTypes.string\n}\n","import React from 'react'\nimport './404Page.scss'\n\nexport const ErrorPage = () => {\n  return (\n    <p className=\"error-page\">404 - This page is not found!!</p>\n  )\n}\n\nexport default ErrorPage\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from '../../components/Header/Header';\nimport EntryForm from '../EntryForm/EntryForm';\nimport ColorBar from '../ColorBar/ColorBar';\nimport HostPage from '../../components/HostPage/HostPage';\nimport ColorFeedback from '../ColorFeedback/ColorFeedback';\nimport ErrorPage from '../../components/404Page/404Page';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getInfo } from '../../util/apiCalls';\nimport { setHosts } from '../../actions/index.js';\nimport { setSeasons } from '../../actions/index.js';\n\nexport class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    this.supplyHosts()\n    this.supplySeasons()\n  }\n\n  supplyHosts = () => {\n    return getInfo('https://color-seasons.herokuapp.com/hosts/', 'hosts')\n    .then(data => this.props.storeHosts(data))\n  }\n\n  supplySeasons = () => {\n    getInfo('https://color-seasons.herokuapp.com/seasons/', 'seasonal analysis')\n    .then(data => this.props.storeSeasons(data))\n  }\n\n  determineHostSeason = () => {\n    return this.props.seasonList.find(season => {\n      return season.id === this.props.chosenHost.season\n    })\n  }\n\n  determineMatch = () => {\n    const hostSeason = this.determineHostSeason()\n    const isAMatch = hostSeason.colors.includes(this.props.chosenColor.id)\n\n    return isAMatch\n  }\n  render() {\n    return (\n      <main className=\"app\">\n      <Switch>\n        <Route exact path=\"/\" render={() => {\n          return (\n            <>\n              <Header />\n              <EntryForm />\n            </>\n          )\n        }} />\n        <Route exact path=\"/hosts/:id\" render={(match) => {\n          const selectedHost = this.props.hostList.find(host => {\n            return host.id === parseInt(match.match.params.id)\n          })\n\n          return (\n            selectedHost && (\n              <>\n                <Header />\n                <HostPage host={selectedHost}/>\n                <ColorBar />\n              </>\n            )\n          )\n        }}/>\n        <Route exact path=\"/hosts/:id/:colorName\" render={(match) => {\n          return (\n            <>\n              <Header />\n              <ColorFeedback\n                match={this.determineMatch()}\n                season={this.determineHostSeason().name}\n              />\n            </>\n          )\n        }}/>\n        <Route path='*' render={() => {\n          return (\n            <>\n              <Header />\n              <ErrorPage />\n            </>\n          )\n        }}/>\n      </Switch>\n      </main>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  hostList: state.hosts,\n  seasonList: state.seasons,\n  chosenHost: state.chosenHost,\n  chosenColor: state.chosenColor,\n  hexList: state.allColors\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  storeHosts: hostData => dispatch(setHosts(hostData)),\n  storeSeasons: seasonData => dispatch(setSeasons(seasonData))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\nApp.propTypes = {\n  hostList: PropTypes.array,\n  seasonList: PropTypes.array,\n  chosenHost: PropTypes.object,\n  chosenColor: PropTypes.string,\n  hexList: PropTypes.array\n}\n","import { combineReducers } from 'redux';\nimport { hostReducer } from './hosts';\nimport { chosenHostReducer } from './chosenHost';\nimport { categoriesReducer } from './categories';\nimport { allColorsReducer } from './allColors';\nimport { seasonsReducer } from './seasons';\nimport { chosenColorReducer } from './chosenColor';\n\nexport const rootReducer = combineReducers({\n  hosts: hostReducer,\n  chosenHost: chosenHostReducer,\n  categories: categoriesReducer,\n  seasons: seasonsReducer,\n  allColors: allColorsReducer,\n  chosenColor: chosenColorReducer\n})\n","export const hostReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_HOSTS':\n      return action.hosts\n    default:\n      return state\n  }\n}\n","export const chosenHostReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'CHOOSE_HOST':\n      return action.chosenHost\n    case 'CLEAR_HOST':\n      return {}\n    default:\n      return state\n  }\n}\n","export const categoriesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_CATEGORIES':\n      return action.categories;\n    default:\n      return state;\n  }\n}\n","export const seasonsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SEASONS':\n      return action.seasons;\n    default:\n      return state;\n  }\n}\n","export const allColorsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_ALL_COLORS':\n      return action.colors;\n    default:\n      return state;\n  }\n}\n","export const chosenColorReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'CHOOSE_COLOR':\n      return action.chosenColor\n    case 'CLEAR_COLOR':\n      return ''\n    default:\n      return state\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.scss';\nimport App from './containers/App/App';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './reducers/index.js'\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <HashRouter basename={'/possessed-and-dressed'}>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}